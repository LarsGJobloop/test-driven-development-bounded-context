openapi: 3.0.3

# Meta information
info:
  title: Order Service API
  description: A RESTful API for managing customer orders.
  version: 0.1.0
servers:
  - url: https://api.example.com/v1

# How the various paths are organized
paths:
  # Endpoint for interacting with all orders/order service
  /orders:
    get:
      summary: Retrieve a list of orders
      operationId: listOrders
      tags:
        - Orders
      responses:
        "200":
          description: A list of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
    post:
      summary: Create a new order
      operationId: createOrder
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        "201":
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"

  # Endpoint for interacting with a single order
  /orders/{orderId}:
    get:
      summary: Retrieve an order by ID
      operationId: getOrder
      tags:
        - Orders
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Order details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "404":
          description: Order not found
    put:
      summary: Update an existing order
      operationId: updateOrder
      tags:
        - Orders
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        "200":
          description: Order updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "404":
          description: Order not found
    delete:
      summary: Delete an order
      operationId: deleteOrder
      tags:
        - Orders
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Order deleted successfully
        "404":
          description: Order not found

# The shape of the object we are given (JSON)
components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: string
          example: "12345"
        customerId:
          type: string
          example: "54321"
        items:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
                example: "98765"
              quantity:
                type: integer
                example: 2
        status:
          type: string
          enum: ["pending", "shipped", "delivered", "cancelled"]
          example: "pending"
        totalAmount:
          type: number
          format: float
          example: 49.99
